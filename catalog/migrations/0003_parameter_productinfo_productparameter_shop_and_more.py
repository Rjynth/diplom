# Generated by Django 5.2 on 2025-04-20 15:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0002_product_characteristics_product_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ProductInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=200)),
                ('price_rrc', models.DecimalField(decimal_places=2, max_digits=200)),
            ],
        ),
        migrations.CreateModel(
            name='ProductParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField(unique=True, verbose_name='Ссылка на сайт магазина')),
            ],
        ),
        migrations.RemoveField(
            model_name='product',
            name='supplier',
        ),
        migrations.AlterModelOptions(
            name='product',
            options={},
        ),
        migrations.RemoveIndex(
            model_name='product',
            name='catalog_pro_sku_2c4c34_idx',
        ),
        migrations.RemoveIndex(
            model_name='product',
            name='catalog_pro_name_f603c0_idx',
        ),
        migrations.RemoveField(
            model_name='product',
            name='characteristics',
        ),
        migrations.RemoveField(
            model_name='product',
            name='description',
        ),
        migrations.RemoveField(
            model_name='product',
            name='price',
        ),
        migrations.RemoveField(
            model_name='product',
            name='sku',
        ),
        migrations.RemoveField(
            model_name='product',
            name='stock',
        ),
        migrations.AddField(
            model_name='productinfo',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='catalog.product'),
        ),
        migrations.AddField(
            model_name='productparameter',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.parameter'),
        ),
        migrations.AddField(
            model_name='productparameter',
            name='product_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.productinfo'),
        ),
        migrations.AddField(
            model_name='productinfo',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_info', to='catalog.shop'),
        ),
        migrations.AddField(
            model_name='category',
            name='shops',
            field=models.ManyToManyField(blank=True, related_name='categories', to='catalog.shop'),
        ),
        migrations.DeleteModel(
            name='Supplier',
        ),
        migrations.AddIndex(
            model_name='productinfo',
            index=models.Index(fields=['product', 'shop'], name='catalog_pro_product_1ef954_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productinfo',
            unique_together={('product', 'shop')},
        ),
    ]
